apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: arm-db-deploy
spec:
  workspaces:
  - name: arm-wip
  params:
    - name: ARM_TEMPLATE
      description: The Azure Quickstart template to use from https://github.com/Azure/azure-quickstart-templates
      type: string
      default: "101-managed-mariadb-with-vnet"
    - name: ARM_RG_NAME
      description: The ResourceGroup to deploy the Azure Resources
      type: string
      default: "rg-arm-paas"
    - name: ARM_RG_LOCATION
      description: The ResourceGroup Location
      type: string
      default: "westeurope"      
    - name: DEPLOYMENT_GRP
      description: The ARM Deployment Group Name
      type: string
      default: "deploy-db"
    - name: DB_SERVER_NAME
      description: The Database server name
      type: string
      default: "my-oss-db"
    - name: ADM_LOGIN
      description: The Admin user name, Maximum length is 16.
      type: string
      default: "db-admin"
    - name: ADM_PWD
      description: The Admin password
      type: string
      default: "ARM-PieceOfChocolate!" 
    - name: AZ_CLI_SP_NAME
      description: Tekton Service Principal Name to use to Signin to AZ CLI
      type: string
    - name: AZ_CLI_SP_PWD
      description: Tekton Service Principal Password
      type: string
    - name: AZ_TENANT
      description: Azure Tenant
      type: string                   
  steps:
    - name: check-params
      image: bash:latest
      workingDir: /workspace/arm-wip
      command: ["/usr/local/bin/bash", "-c"] # which bash ==> /usr/local/bin/bash
      args:
        - |-
          iac=$(inputs.params.ARM_TEMPLATE)
          arm_template_root=Azure/azure-quickstart-templates
          
          echo Creating directory for ARM Template $iac from https://github.com/$arm_template_root
          rm $iac/azuredeploy.parameters.json
          rm -Rf $iac
          mkdir $iac
          ls -al $iac
          wget  https://raw.githubusercontent.com/$arm_template_root/master/$iac/azuredeploy.parameters.json -O $iac/azuredeploy.parameters.json
          
          echo Checking ARM Deployment parameters in Directory $iac
          ls -al $iac

          arm_rg_name=$(inputs.params.ARM_RG_NAME)
          arm_deployment_name=$(inputs.params.DEPLOYMENT_GRP)
          db_usr=$(inputs.params.ADM_LOGIN)
          db_pwd=$(inputs.params.ADM_PWD)
          db_server=$(inputs.params.DB_SERVER_NAME)
          location=$(inputs.params.ARM_RG_LOCATION)

          echo arm_rg_name=$arm_rg_name
          echo arm_deployment_name=$arm_deployment_name
          echo db_server=$db_server
          echo db_usr=$db_usr
          echo db_pwd=$db_pwd
          echo location=$location

          echo About to replace parameters default values with the ones provided :
          sed -i  $iac/azuredeploy.parameters.json -e "s/\GEN-UNIQUE-8/\1${db_usr}/I"
          sed -i  $iac/azuredeploy.parameters.json -e "s/\GEN-UNIQUE/\1${db_server}/I"
          sed -i  $iac/azuredeploy.parameters.json -e "s/\GEN-PASSWORD/\1${db_pwd}/I"

          cat  $iac/azuredeploy.parameters.json

          echo -----------------------------------
    - name: deploy-db
      image: mcr.microsoft.com/azure-cli:latest
      workingDir: /workspace/arm-wip
      command: ["/bin/bash", "-c"]
      args:
        - |-
          iac=$(inputs.params.ARM_TEMPLATE)
          arm_template_root=Azure/azure-quickstart-templates
          
          mkdir  $iac
          # curl  https://raw.githubusercontent.com/$arm_template_root/master/$iac/azuredeploy.json -o $iac/azuredeploy.json
          # curl  https://raw.githubusercontent.com/$arm_template_root/master/$iac/azuredeploy.parameters.json -o $iac/azuredeploy.parameters.json
          ls -al  $iac
          cat  $iac/azuredeploy.parameters.json

          arm_rg_name=$(inputs.params.ARM_RG_NAME)
          arm_deployment_name=$(inputs.params.DEPLOYMENT_GRP)
          db_usr=$(inputs.params.ADM_LOGIN)
          db_pwd=$(inputs.params.ADM_PWD)
          db_server=$(inputs.params.DB_SERVER_NAME)
          location=$(inputs.params.ARM_RG_LOCATION)

          az_spn=$(inputs.params.AZ_CLI_SP_NAME)
          az_pwd=$(inputs.params.AZ_CLI_SP_PWD)
          az_tenant=$(inputs.params.AZ_TENANT)

          # https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli
          echo Sign in CLI with a Service Principal
          az login --service-principal -u $az_spn -p $az_pwd --tenant $az_tenant

          echo Creating ResourceGroup $arm_rg_name
          az group create --name $arm_rg_name --location $location

          echo About to deploy ARM Template $iac from https://github.com/$arm_template_root

          arm_result=$(az deployment group create \
          --resource-group $arm_rg_name \
          --name $arm_deployment_name \
          --template-uri https://raw.githubusercontent.com/$arm_template_root/master/$iac/azuredeploy.json \
          --parameters $iac/azuredeploy.parameters.json)

          echo $arm_result
          
          if [[ -n "$(echo $arm_result | grep -e "error:" )" ]]
            then
               echo ERROR in ARM deployment, EXIT
               exit 1
            else
              echo No error in ARM deployment
              return 0
          fi

          echo -----------------------------------
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: arm-db-pre-flight
spec:
  workspaces:
  - name: arm-wip
  steps:
    - name: init
      image: bash:latest
      workingDir: /workspace/arm-wip
      script: | 
        #!/usr/local/bin/bash
        echo pre-flight init step ...
        # echo I am supposed to sleep for 10 seconds!
        echo -----------------------------------     
        sleep 10
      # timeout: 5s
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: arm-db-post-check
spec:
  workspaces:
  - name: arm-wip
  steps:
    - name: landing
      image: bash:latest
      workingDir: /workspace/arm-wip
      script: | 
        #!/usr/local/bin/bash
        echo Post-provisionning check completed.
        echo -----------------------------------
        sleep 10
      # timeout: 5s
